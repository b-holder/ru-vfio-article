disclaimer:
славы я не ищу, инвайт на хабр мне в общем-то ненужен. постоянного никнейма у меня нет. всё что у меня есть постоянного - это почта.
Реальный Disclaimer:
Я могу ошибаться в определениях, идеях и теории работы. Просто в силу разных физиологических причин - плохая память и малое количество мозгов, я не профессор какой-нибудь чтобы по памяти описывать архитектуру PC в мельчайших деталях. Таким образом, если что-то не так описано, или работает не так, как я написал - значит это скорее всего я неправильно понял, и я открыт для обсуждения и правки. Собственно, для этого я и заливаю это всё на гитхаб.

Ну тут типа приветствие какое-нибудь, не знаю какое

---
содержание сюда запилить если возможно
---

В свете недавних новостей анонса Linux-on-Windows от майкрософта, а также из-за упоминаний виртуальной машины с 3D графикой в комментариях, пришло время всё-таки написать мне(и другим русскоязычным пользователям) хоть какой-то свежий гайд и обзор на это всё.

А писать мы будем про vfio-pci.

---

Зачем?

Предположим, вы хотите работать в своей любимой IDE, использовать свои горячо любимые grep,awk,sed, пишете кроссплатформенное приложение и всё такое прочее, но при этом хотите(или вынуждены) использовать некий windows-специфичный софт, например большинство CADов, или большинство игр.
Или вы достаточно круты, хотите писать ядерный драйвер на какое-нибудь pci устройство собственной разработки(ссылка на vfio-users mailing list, где посоны из университета оклахомы вроде запилили себе карту и пытаются её пробросить), хотите его отлаживать, и не хотите вешать reset на педаль.
И этот софт если под wine и запускается, то глючит или безбожно тормозит.
Выхода нет, так или иначе придётся использовать две, а то и три ОС.
Майкрософт предлагают использовать LXSS, кто-то предложит wine, кто-то предложи т поставить виртуальную машину с windows или linux на какой-нибудь хост.
Только в большинство серьёзных игр на виртуальной машине не поиграешь из-за отсутствия аппаратного ускорения.
Те решения, что предлагает VmWare или VirtualBox - лишь виртуальное видео устройство, не шибко бьющее рекорды производительности.

Я тоже задавался этим вопросом, потому что институт заставляет меня использовать всякое добро вроде ANSYS или Компас-3D, но в linux я уже вжился.

Решение есть, и имя ему - vfio-pci.
Давным давно(уточнить когда точно, кажется в 2013), один разработчик из redhat(ссылочку на aw) взял и написал модуль ядра, который перехватывает всё общение PCI устройства и через IOMMU "пробрасывает"(pass-through) его в виртуальную машину.
Отличается от того pci-passthrough, что был в XEN(ссылку на вики по XEN) он тем, что разруливает две очень интересных вещи, а именно VGA и DMA-запросы.
Да и в целом не заброшен, XENовский pci-back был помечен как deprecated некоторое время назад.

Конечно, есть проприетарные и полуоткрытые решения от производителей, вроде quadro(ссылка на статью на хабре, где видео распилили и попробрасывали в ВМы) или intel GVT-g.

Проблемы этих решений очевидны, intel GVT-g делает то же самое что решение nvidia, а именно предоставляет "более прямой" враппер по пути "виртуальная видеокарта в ВМ <-> физический вычислитель, с возможностью разделения на несколько.
Видеовывод через VGA работать не будет, всё завязано на одного производителя с весёлыми блокировками(ссылка на будущую часть про нвидию).
Плюс этих решений - возможность поделить одну карту на несколько ВМ, vfio-pci так пока не может.


Статус


На данный момент, проект находится в стадии поддержки.
Большинство старых платформ обоих производителей(intel и amd) вполне работают без особых костылей и граблей, на редких и более свежих платформах - ничего не работает и никто не против, на последних чипсетах от интел появилось разделение на "нормальные" и "ужасно сломанные", но это патчится.
На ноутбуках есть какие-то поползновения, но пока производители не научатся делать нормальные ноутбуки, врядли что-нибудь получится. Любое энергосбережение вроде Optimus - и ноутбук уже не может, какой бы крутой процессор там не был.

В итоге получается что если у вас что-то не мейнстримное, то оно скорее всего так или иначе сломано.

О подборе железа и отношении производителей к этому будет в следующих частях.

Из форумов остался только mailing-list(ссылочку), так как администрация форума archlinux решила спустя 5000 постов вспомнить о том, что форум только для arch linux, в добавок с общим, мягко скажем, удивлением, тред теперь доступен только как архив, а основные лица тихонько свалили.
Ещё есть более не обновляемый google spreadsheet с около 3000 записями рабочих(и не очень) конфигураций.
Большая часть того, что написано в вики дебиана-арча-генту-какой угодно - скорее всего ложь или устаревшая информация, которую проще потереть чем исправить.


Немного теории

PCI Express шина имеет по большей части тоже самое что и PCI, но в расширенное и улучшенное.
Например, на шине PCI у вас всегда есть строго определённое количество ножек прерываний, названных INTx(INTA, INTB..).
Прерывания эти завязаны на legacy контроллер прерываний, который не очень быстро работает, и их ограниченное количество, плюс на некоторых платформах были проблемы(no_intx_mapping опция или как её там) с пробросом их в виртуальную машину.
На PCI-e есть Message Signalled Interrupts - MSI. Как видно из названия, они основаны на сообщениях устройства, а значит более быстрые и могут быть использованы в ВМ.
Чаще всего это нужно при работе со звуком, но гостевой видеодрайвер может сильно удивиться если вдруг не сможет их завести.

VGA - старый, древний, legacy, тёплый ламповый. Представляет из себя, на самом деле, определённые диапазоны памяти(посмотреть какие) и определённые порты PIO, ну и стандартный интерфейс работы с ним. И также INT 10h.
Проблема в том, что просто предоставить ВМ доступ к VGA PCI устройству недостаточно для работы VGA, нужно ещё ловить INT 10h, MMIO и PIO доступ, и перенаправлять его в наше устройство.
Собственно, этой задачей и занимается IOMMU.
